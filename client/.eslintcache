[{"/Users/daniel/general_assembly/sei/unit_4/care/client/src/reportWebVitals.js":"1","/Users/daniel/general_assembly/sei/unit_4/care/client/src/App.jsx":"2","/Users/daniel/general_assembly/sei/unit_4/care/client/src/index.js":"3","/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Layout.jsx":"4","/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Footer.jsx":"5","/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Header.jsx":"6","/Users/daniel/general_assembly/sei/unit_4/care/client/src/CurrentUser/CurrentUserContext.jsx":"7","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/auth.js":"8","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/auth/Login.jsx":"9","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/auth/Register.jsx":"10","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/apiConfig.js":"11","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Home/Home.jsx":"12","/Users/daniel/general_assembly/sei/unit_4/care/client/src/containers/MoodsContainer.jsx":"13","/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/MoodComponents/Moods.jsx":"14","/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/MoodComponents/MoodCard.jsx":"15","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/moods.js":"16","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/MoodScreens/MoodEdit.jsx":"17","/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/Dialogs/MoodCreate.jsx":"18","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Settings/Settings.jsx":"19","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/InsightScreens/InsightCreate.jsx":"20","/Users/daniel/general_assembly/sei/unit_4/care/client/src/containers/InsightsContainer.jsx":"21","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Insights/Insights.jsx":"22","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/insights.js":"23","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/InsightScreens/InsightEdit.jsx":"24","/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/InsightComponents/InsightCard.jsx":"25","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/InsightScreens/InsightDetail.jsx":"26"},{"size":362,"mtime":1606749279641,"results":"27","hashOfConfig":"28"},{"size":2977,"mtime":1606867007257,"results":"29","hashOfConfig":"28"},{"size":589,"mtime":1606763998910,"results":"30","hashOfConfig":"28"},{"size":406,"mtime":1606866134031,"results":"31","hashOfConfig":"28"},{"size":1459,"mtime":1606853121764,"results":"32","hashOfConfig":"28"},{"size":3122,"mtime":1606866235844,"results":"33","hashOfConfig":"28"},{"size":864,"mtime":1606866350444,"results":"34","hashOfConfig":"28"},{"size":1054,"mtime":1606779597505,"results":"35","hashOfConfig":"28"},{"size":8965,"mtime":1606859536836,"results":"36","hashOfConfig":"28"},{"size":5631,"mtime":1606786653651,"results":"37","hashOfConfig":"28"},{"size":314,"mtime":1606749945092,"results":"38","hashOfConfig":"28"},{"size":2298,"mtime":1606837729252,"results":"39","hashOfConfig":"28"},{"size":1859,"mtime":1606837787017,"results":"40","hashOfConfig":"28"},{"size":1920,"mtime":1606862863814,"results":"41","hashOfConfig":"28"},{"size":4068,"mtime":1606840415888,"results":"42","hashOfConfig":"28"},{"size":683,"mtime":1606836987486,"results":"43","hashOfConfig":"28"},{"size":3483,"mtime":1606841700840,"results":"44","hashOfConfig":"28"},{"size":4867,"mtime":1606842636302,"results":"45","hashOfConfig":"28"},{"size":2038,"mtime":1606849902798,"results":"46","hashOfConfig":"28"},{"size":2400,"mtime":1606861406986,"results":"47","hashOfConfig":"28"},{"size":2465,"mtime":1606867042004,"results":"48","hashOfConfig":"28"},{"size":1457,"mtime":1606869789741,"results":"49","hashOfConfig":"28"},{"size":677,"mtime":1606851000513,"results":"50","hashOfConfig":"28"},{"size":2848,"mtime":1606863431460,"results":"51","hashOfConfig":"28"},{"size":1997,"mtime":1606868048986,"results":"52","hashOfConfig":"28"},{"size":1705,"mtime":1606869671516,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"785fjd",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},"/Users/daniel/general_assembly/sei/unit_4/care/client/src/reportWebVitals.js",[],["116","117"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/App.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/index.js",[],["118","119"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Layout.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Footer.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Header.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/CurrentUser/CurrentUserContext.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/auth.js",[],["120","121"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/auth/Login.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/auth/Register.jsx",["122"],"import { useState, useContext } from \"react\";\nimport { CurrentUserContext } from \"../../CurrentUser/CurrentUserContext\";\nimport { registerUser } from \"../../services/auth\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexFlow: \"wrap\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100vh\",\n  },\n  logoContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: \"20px\",\n    marginBottom: \"20px\",\n  },\n\n  title: {\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    fontSize: \"36px\",\n    padding: \"15px\",\n    marginTop: \"10px\",\n    textShadow: \"0.5px 4px 10px #999\",\n  },\n  logo: {\n    maxWidth: \"100px\",\n    maxHeight: \"100px\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  registerButton: {\n    margin: \"20px auto\",\n    padding: \"20px\",\n    color: \"#62B5D9\",\n    fontSize: \"28px\",\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    textTransform: \"capitalize\",\n  },\n  login: {\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    fontSize: \"26px\",\n    textDecoration: \"none\",\n    color: \"#000\",\n  },\n  loginLink: {\n    textDecoration: \"none\",\n    color: \"#62B5D9\",\n  },\n  inputField: {\n    marginBottom: \"20px\",\n    width: \"300px\",\n    marginLeft: \"10px\",\n  },\n  passwordField: {\n    marginBottom: \"20px\",\n    width: \"300px\",\n  },\n  lockIcon: {\n    marginRight: \"10px\",\n  },\n  inputContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n});\n\nexport default function Register() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleRegister = async (registerData) => {\n    const userData = await registerUser(registerData);\n    setCurrentUser(userData);\n    history.push(\"/\");\n  };\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.logoContainer}>\n        <Typography className={classes.title}>Care</Typography>\n        <img\n          className={classes.logo}\n          src=\"https://i.imgur.com/1QePclv.png\"\n          alt=\"logo\"\n        />\n      </div>\n      <form\n        className={classes.form}\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleRegister(formData);\n        }}\n      >\n        <div className={classes.inputContainer}>\n          <AccountCircleIcon />\n          <TextField\n            className={classes.inputField}\n            type=\"text\"\n            name=\"name\"\n            label=\"Name\"\n            value={formData.name}\n            onChange={handleChange}\n          />\n        </div>\n        <br />\n        <div className={classes.inputContainer}>\n          <EmailIcon />\n          <TextField\n            className={classes.inputField}\n            type=\"text\"\n            name=\"email\"\n            label=\"Email Address\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n        </div>\n        <br />\n        <div className={classes.inputContainer}>\n          <LockIcon className={classes.lockIcon} />\n          <FormControl>\n            <InputLabel htmlFor=\"standard-adornment-password\">\n              Password\n            </InputLabel>\n            <Input\n              className={classes.passwordField}\n              name=\"password\"\n              id=\"standard-adornment-password\"\n              type={showPassword ? \"text\" : \"password\"}\n              value={formData.password}\n              onChange={handleChange}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        </div>\n        <br />\n        <Button type=\"submit\" className={classes.registerButton}>\n          Register\n        </Button>\n      </form>\n      <Typography className={classes.login}>\n        Already have an account? &nbsp;\n        <Link className={classes.loginLink} to=\"/login\">\n          Login\n        </Link>\n      </Typography>\n    </div>\n  );\n}\n","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/apiConfig.js",[],["123","124"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Home/Home.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/containers/MoodsContainer.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/MoodComponents/Moods.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/MoodComponents/MoodCard.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/moods.js",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/MoodScreens/MoodEdit.jsx",["125"],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { red, green, yellow } from \"@material-ui/core/colors\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  inputs: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n\nconst PoorRadio = withStyles({\n  root: {\n    color: red[500],\n    \"&$checked\": {\n      color: red[300],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst GoodRadio = withStyles({\n  root: {\n    color: green[700],\n    \"&$checked\": {\n      color: green[800],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst GreatRadio = withStyles({\n  root: {\n    color: green[500],\n    \"&$checked\": {\n      color: green[400],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst OkayRadio = withStyles({\n  root: {\n    color: yellow[600],\n    \"&$checked\": {\n      color: yellow[700],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nexport default function MoodEdit(props) {\n  const classes = useStyles();\n\n  const [formData, setFormData] = useState({\n    status: \"\",\n  });\n  const { id } = useParams();\n\n  useEffect(() => {\n    const prefillForm = () => {\n      const moodItem = props.moods?.find((mood) => mood?.id === Number(id));\n      setFormData({\n        status: moodItem?.status,\n      });\n    };\n    if (props.moods.length) {\n      prefillForm();\n    }\n  }, [props.moods]);\n\n  const handleChange = (e) => {\n    const { name } = e.target;\n    setFormData({\n      status: name,\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <form\n        className={classes.form}\n        onSubmit={(e) => {\n          e.preventDefault();\n          props.handleUpdate(id, formData);\n        }}\n      >\n        <h3>Edit Mood</h3>\n        <div className={classes.inputs}>\n          <FormLabel>\n            Poor\n            <PoorRadio\n              type=\"radio\"\n              name=\"Poor\"\n              checked={formData.status === \"Poor\"}\n              onChange={handleChange}\n            />\n          </FormLabel>\n          <FormLabel>\n            Okay\n            <OkayRadio\n              type=\"radio\"\n              name=\"Okay\"\n              checked={formData.status === \"Okay\"}\n              onChange={handleChange}\n            />\n          </FormLabel>\n\n          <FormLabel>\n            Good\n            <GoodRadio\n              type=\"radio\"\n              name=\"Good\"\n              checked={formData.status === \"Good\"}\n              onChange={handleChange}\n            />\n          </FormLabel>\n          <FormLabel>\n            Great\n            <GreatRadio\n              type=\"radio\"\n              name=\"Great\"\n              checked={formData.status === \"Great\"}\n              onChange={handleChange}\n            />\n          </FormLabel>\n        </div>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Submit\n        </Button>\n        <Button\n          to=\"/\"\n          component={Link}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Go Back\n        </Button>\n      </form>\n    </div>\n  );\n}\n",["126","127"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/Dialogs/MoodCreate.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Settings/Settings.jsx",["128","129"],"import { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Layout from \"../../../layouts/Layout/Layout\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { useContext } from \"react\";\nimport { CurrentUserContext } from \"../../../CurrentUser/CurrentUserContext\";\nimport Moment from \"react-moment\";\nimport \"moment-timezone\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"95vw\",\n    margin: \"0 auto\",\n  },\n  card: {\n    display: \"flex\",\n  },\n  actionsContainer: {\n    display: \"flex\",\n  },\n}));\n\nexport default function Settings({\n  darkMode,\n  switchState,\n  setDarkMode,\n  handleThemeChange,\n}) {\n  const classes = useStyles();\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n\n  const userDate = currentUser?.created_at.toLocaleString();\n  return (\n    <Layout title=\"Settings\">\n      <div className={classes.userContainer}>\n        <Typography className={classes.title}>{currentUser?.name}</Typography>\n        <Typography className={classes.title}>{currentUser?.email}</Typography>\n        <Typography>\n          Joined&nbsp;\n          <Moment format=\"MM/DD/yyyy\">{userDate}</Moment>\n        </Typography>\n      </div>\n      <div className={classes.root}>\n        <Typography>Preferences</Typography>\n        <Card className={classes.card}>\n          <CardActions className={classes.actionsContainer}>\n            <Typography className={classes.typography}>Dark mode</Typography>\n            {/* <Typography onClick={handleThemeChange}>HELLO</Typography> */}\n            <Switch\n              className={classes.darkModeSwitch}\n              // checked={darkMode}\n              checked={switchState}\n              // onChange={() => setDarkMode(!darkMode)}\n              onChange={handleThemeChange}\n            />\n          </CardActions>\n        </Card>\n      </div>\n    </Layout>\n  );\n}\n",["130","131"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/InsightScreens/InsightCreate.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/containers/InsightsContainer.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Insights/Insights.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/insights.js",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/InsightScreens/InsightEdit.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/InsightComponents/InsightCard.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/InsightScreens/InsightDetail.jsx",["132"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { CurrentUserContext } from \"../../CurrentUser/CurrentUserContext\";\nimport styled from \"styled-components\";\nconst Wrapper = styled.div`\n  .content-container {\n    display: flex;\n    flex-direction: column;\n    align-content: center;\n    min-height: 100vh;\n    max-height: 100%;\n  }\n  .insight-body {\n    min-width: 400px;\n  }\n`;\nexport default function InsightDetail({ getOneInsight, handleDelete }) {\n  const [insight, setInsight] = useState(null);\n  const [currentUser] = useContext(CurrentUserContext);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getData = async () => {\n      const getInsight = await getOneInsight(id);\n      setInsight(getInsight);\n    };\n    getData();\n  }, [id]);\n\n  return (\n    <Wrapper>\n      <div className=\"content-container\">\n        <h1>{insight?.title}</h1>\n        <small>{insight?.description}</small>\n        <div className=\"insight-body\">\n          <p>{insight?.body}</p>\n        </div>\n        <div className=\"buttons\">\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            to=\"/insights\"\n            component={Link}\n          >\n            Go Back\n          </Button>\n        </div>\n        {insight?.user_id === currentUser?.id && (\n          <>\n            <div>\n              <Link to={`/insights/${insight?.id}/edit`}>\n                <button>Edit</button>\n              </Link>\n              <button onClick={() => handleDelete(insight.id)}>Delete</button>\n            </div>\n          </>\n        )}\n      </div>\n    </Wrapper>\n  );\n}\n",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"133","replacedBy":"137"},{"ruleId":"135","replacedBy":"138"},{"ruleId":"133","replacedBy":"139"},{"ruleId":"135","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":92,"column":10,"nodeType":"143","messageId":"144","endLine":92,"endColumn":21},{"ruleId":"133","replacedBy":"145"},{"ruleId":"135","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":79,"column":6,"nodeType":"149","endLine":79,"endColumn":19,"suggestions":"150"},{"ruleId":"133","replacedBy":"151"},{"ruleId":"135","replacedBy":"152"},{"ruleId":"141","severity":1,"message":"153","line":1,"column":10,"nodeType":"143","messageId":"144","endLine":1,"endColumn":14},{"ruleId":"141","severity":1,"message":"154","line":33,"column":23,"nodeType":"143","messageId":"144","endLine":33,"endColumn":37},{"ruleId":"133","replacedBy":"155"},{"ruleId":"135","replacedBy":"156"},{"ruleId":"147","severity":1,"message":"157","line":29,"column":6,"nodeType":"149","endLine":29,"endColumn":10,"suggestions":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],["159"],["160"],["159"],["160"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar",["159"],["160"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["161"],["159"],["160"],"'Link' is defined but never used.","'setCurrentUser' is assigned a value but never used.",["159"],["160"],"React Hook useEffect has a missing dependency: 'getOneInsight'. Either include it or remove the dependency array. If 'getOneInsight' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["162"],"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [id, props.moods]",{"range":"167","text":"168"},"Update the dependencies array to be: [getOneInsight, id]",{"range":"169","text":"170"},[1762,1775],"[id, props.moods]",[868,872],"[getOneInsight, id]"]