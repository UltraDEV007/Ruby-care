[{"/Users/daniel/general_assembly/sei/unit_4/care/client/src/reportWebVitals.js":"1","/Users/daniel/general_assembly/sei/unit_4/care/client/src/App.jsx":"2","/Users/daniel/general_assembly/sei/unit_4/care/client/src/index.js":"3","/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Layout.jsx":"4","/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Footer.jsx":"5","/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Header.jsx":"6","/Users/daniel/general_assembly/sei/unit_4/care/client/src/CurrentUser/CurrentUserContext.jsx":"7","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/auth.js":"8","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/auth/Login.jsx":"9","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/auth/Register.jsx":"10","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/apiConfig.js":"11","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Home/Home.jsx":"12","/Users/daniel/general_assembly/sei/unit_4/care/client/src/containers/MoodsContainer.jsx":"13","/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/MoodComponents/Moods.jsx":"14","/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/MoodComponents/MoodCard.jsx":"15","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/moods.js":"16","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/MoodScreens/MoodEdit.jsx":"17","/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/Dialogs/MoodCreate.jsx":"18","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Settings/Settings.jsx":"19","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/InsightScreens/InsightCreate.jsx":"20","/Users/daniel/general_assembly/sei/unit_4/care/client/src/containers/InsightsContainer.jsx":"21","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Insights/Insights.jsx":"22","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/insights.js":"23"},{"size":362,"mtime":1606749279641,"results":"24","hashOfConfig":"25"},{"size":2888,"mtime":1606855307683,"results":"26","hashOfConfig":"25"},{"size":589,"mtime":1606763998910,"results":"27","hashOfConfig":"25"},{"size":405,"mtime":1606801407890,"results":"28","hashOfConfig":"25"},{"size":1459,"mtime":1606853121764,"results":"29","hashOfConfig":"25"},{"size":3151,"mtime":1606853397120,"results":"30","hashOfConfig":"25"},{"size":856,"mtime":1606853574667,"results":"31","hashOfConfig":"25"},{"size":1054,"mtime":1606779597505,"results":"32","hashOfConfig":"25"},{"size":5400,"mtime":1606853949274,"results":"33","hashOfConfig":"25"},{"size":5631,"mtime":1606786653651,"results":"34","hashOfConfig":"25"},{"size":314,"mtime":1606749945092,"results":"35","hashOfConfig":"25"},{"size":2298,"mtime":1606837729252,"results":"36","hashOfConfig":"25"},{"size":1859,"mtime":1606837787017,"results":"37","hashOfConfig":"25"},{"size":1920,"mtime":1606837838480,"results":"38","hashOfConfig":"25"},{"size":4068,"mtime":1606840415888,"results":"39","hashOfConfig":"25"},{"size":683,"mtime":1606836987486,"results":"40","hashOfConfig":"25"},{"size":3483,"mtime":1606841700840,"results":"41","hashOfConfig":"25"},{"size":4867,"mtime":1606842636302,"results":"42","hashOfConfig":"25"},{"size":2038,"mtime":1606849902798,"results":"43","hashOfConfig":"25"},{"size":1108,"mtime":1606852694188,"results":"44","hashOfConfig":"25"},{"size":1826,"mtime":1606853549778,"results":"45","hashOfConfig":"25"},{"size":1303,"mtime":1606853491955,"results":"46","hashOfConfig":"25"},{"size":677,"mtime":1606851000513,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"785fjd",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"95"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/daniel/general_assembly/sei/unit_4/care/client/src/reportWebVitals.js",[],["105","106"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/App.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/index.js",[],["107","108"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Layout.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Footer.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Header.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/CurrentUser/CurrentUserContext.jsx",[],["109","110"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/auth.js",[],["111","112"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/auth/Login.jsx",["113"],"import { useState, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../CurrentUser/CurrentUserContext\";\nimport { loginUser } from \"../../services/auth\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexFlow: \"wrap\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100vh\",\n  },\n  logoContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: \"20px\",\n    marginBottom: \"20px\",\n  },\n\n  title: {\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    fontSize: \"36px\",\n    padding: \"15px\",\n    marginTop: \"10px\",\n    textShadow: \"0.5px 4px 10px #999\",\n  },\n  logo: {\n    maxWidth: \"100px\",\n    maxHeight: \"100px\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  loginButton: {\n    margin: \"20px auto\",\n    padding: \"20px\",\n    color: \"#62B5D9\",\n    fontSize: \"28px\",\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    textTransform: \"capitalize\",\n  },\n  register: {\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    fontSize: \"26px\",\n    textDecoration: \"none\",\n    // color: \"#000\",\n  },\n  registerLink: {\n    textDecoration: \"none\",\n    color: \"#62B5D9\",\n  },\n  inputField: {\n    color: \"black\",\n    marginBottom: \"20px\",\n    width: \"300px\",\n    marginLeft: \"10px\",\n  },\n  passwordField: {\n    marginBottom: \"20px\",\n    width: \"300px\",\n  },\n  lockIcon: {\n    marginRight: \"10px\",\n  },\n  inputContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    color: \"black\",\n  },\n});\n\nexport default function Login() {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleLogin = async (loginData) => {\n    const userData = await loginUser(loginData);\n    setCurrentUser(userData);\n    history.push(\"/\");\n  };\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <>\n      <div className={classes.root}>\n        <div className={classes.logoContainer}>\n          <Typography className={classes.title}>Care</Typography>\n          <img\n            className={classes.logo}\n            src=\"https://i.imgur.com/1QePclv.png\"\n            alt=\"logo\"\n          />\n        </div>\n\n        <form\n          className={classes.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleLogin(formData);\n          }}\n        >\n          <div className={classes.inputContainer}>\n            <EmailIcon />\n            <TextField\n              className={classes.inputField}\n              type=\"text\"\n              name=\"email\"\n              label=\"Email Address\"\n              value={formData.email}\n              onChange={handleChange}\n            />\n          </div>\n          <br />\n          <div className={classes.inputContainer}>\n            <LockIcon className={classes.lockIcon} />\n            <FormControl>\n              <InputLabel htmlFor=\"standard-adornment-password\">\n                Password\n              </InputLabel>\n              <Input\n                className={classes.passwordField}\n                name=\"password\"\n                id=\"standard-adornment-password\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={formData.password}\n                onChange={handleChange}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          </div>\n          <br />\n          <Button type=\"submit\" className={classes.loginButton}>\n            Login\n          </Button>\n        </form>\n        <Typography className={classes.register}>\n          Don't have an account? &nbsp;\n          <Link className={classes.registerLink} to=\"/register\">\n            Register\n          </Link>\n        </Typography>\n      </div>\n    </>\n  );\n}\n","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/auth/Register.jsx",["114"],"import { useState, useContext } from \"react\";\nimport { CurrentUserContext } from \"../../CurrentUser/CurrentUserContext\";\nimport { registerUser } from \"../../services/auth\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexFlow: \"wrap\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100vh\",\n  },\n  logoContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: \"20px\",\n    marginBottom: \"20px\",\n  },\n\n  title: {\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    fontSize: \"36px\",\n    padding: \"15px\",\n    marginTop: \"10px\",\n    textShadow: \"0.5px 4px 10px #999\",\n  },\n  logo: {\n    maxWidth: \"100px\",\n    maxHeight: \"100px\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  registerButton: {\n    margin: \"20px auto\",\n    padding: \"20px\",\n    color: \"#62B5D9\",\n    fontSize: \"28px\",\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    textTransform: \"capitalize\",\n  },\n  login: {\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    fontSize: \"26px\",\n    textDecoration: \"none\",\n    color: \"#000\",\n  },\n  loginLink: {\n    textDecoration: \"none\",\n    color: \"#62B5D9\",\n  },\n  inputField: {\n    marginBottom: \"20px\",\n    width: \"300px\",\n    marginLeft: \"10px\",\n  },\n  passwordField: {\n    marginBottom: \"20px\",\n    width: \"300px\",\n  },\n  lockIcon: {\n    marginRight: \"10px\",\n  },\n  inputContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n});\n\nexport default function Register() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleRegister = async (registerData) => {\n    const userData = await registerUser(registerData);\n    setCurrentUser(userData);\n    history.push(\"/\");\n  };\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.logoContainer}>\n        <Typography className={classes.title}>Care</Typography>\n        <img\n          className={classes.logo}\n          src=\"https://i.imgur.com/1QePclv.png\"\n          alt=\"logo\"\n        />\n      </div>\n      <form\n        className={classes.form}\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleRegister(formData);\n        }}\n      >\n        <div className={classes.inputContainer}>\n          <AccountCircleIcon />\n          <TextField\n            className={classes.inputField}\n            type=\"text\"\n            name=\"name\"\n            label=\"Name\"\n            value={formData.name}\n            onChange={handleChange}\n          />\n        </div>\n        <br />\n        <div className={classes.inputContainer}>\n          <EmailIcon />\n          <TextField\n            className={classes.inputField}\n            type=\"text\"\n            name=\"email\"\n            label=\"Email Address\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n        </div>\n        <br />\n        <div className={classes.inputContainer}>\n          <LockIcon className={classes.lockIcon} />\n          <FormControl>\n            <InputLabel htmlFor=\"standard-adornment-password\">\n              Password\n            </InputLabel>\n            <Input\n              className={classes.passwordField}\n              name=\"password\"\n              id=\"standard-adornment-password\"\n              type={showPassword ? \"text\" : \"password\"}\n              value={formData.password}\n              onChange={handleChange}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        </div>\n        <br />\n        <Button type=\"submit\" className={classes.registerButton}>\n          Register\n        </Button>\n      </form>\n      <Typography className={classes.login}>\n        Already have an account? &nbsp;\n        <Link className={classes.loginLink} to=\"/login\">\n          Login\n        </Link>\n      </Typography>\n    </div>\n  );\n}\n","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/apiConfig.js",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Home/Home.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/containers/MoodsContainer.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/MoodComponents/Moods.jsx",[],["115","116"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/MoodComponents/MoodCard.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/moods.js",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/MoodScreens/MoodEdit.jsx",["117"],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { red, green, yellow } from \"@material-ui/core/colors\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  inputs: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n});\n\nconst PoorRadio = withStyles({\n  root: {\n    color: red[500],\n    \"&$checked\": {\n      color: red[300],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst GoodRadio = withStyles({\n  root: {\n    color: green[700],\n    \"&$checked\": {\n      color: green[800],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst GreatRadio = withStyles({\n  root: {\n    color: green[500],\n    \"&$checked\": {\n      color: green[400],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst OkayRadio = withStyles({\n  root: {\n    color: yellow[600],\n    \"&$checked\": {\n      color: yellow[700],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nexport default function MoodEdit(props) {\n  const classes = useStyles();\n\n  const [formData, setFormData] = useState({\n    status: \"\",\n  });\n  const { id } = useParams();\n\n  useEffect(() => {\n    const prefillForm = () => {\n      const moodItem = props.moods?.find((mood) => mood?.id === Number(id));\n      setFormData({\n        status: moodItem?.status,\n      });\n    };\n    if (props.moods.length) {\n      prefillForm();\n    }\n  }, [props.moods]);\n\n  const handleChange = (e) => {\n    const { name } = e.target;\n    setFormData({\n      status: name,\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <form\n        className={classes.form}\n        onSubmit={(e) => {\n          e.preventDefault();\n          props.handleUpdate(id, formData);\n        }}\n      >\n        <h3>Edit Mood</h3>\n        <div className={classes.inputs}>\n          <FormLabel>\n            Poor\n            <PoorRadio\n              type=\"radio\"\n              name=\"Poor\"\n              checked={formData.status === \"Poor\"}\n              onChange={handleChange}\n            />\n          </FormLabel>\n          <FormLabel>\n            Okay\n            <OkayRadio\n              type=\"radio\"\n              name=\"Okay\"\n              checked={formData.status === \"Okay\"}\n              onChange={handleChange}\n            />\n          </FormLabel>\n\n          <FormLabel>\n            Good\n            <GoodRadio\n              type=\"radio\"\n              name=\"Good\"\n              checked={formData.status === \"Good\"}\n              onChange={handleChange}\n            />\n          </FormLabel>\n          <FormLabel>\n            Great\n            <GreatRadio\n              type=\"radio\"\n              name=\"Great\"\n              checked={formData.status === \"Great\"}\n              onChange={handleChange}\n            />\n          </FormLabel>\n        </div>\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Submit\n        </Button>\n        <Button\n          to=\"/\"\n          component={Link}\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Go Back\n        </Button>\n      </form>\n    </div>\n  );\n}\n","/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/Dialogs/MoodCreate.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Settings/Settings.jsx",["118","119"],"import { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Layout from \"../../../layouts/Layout/Layout\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { useContext } from \"react\";\nimport { CurrentUserContext } from \"../../../CurrentUser/CurrentUserContext\";\nimport Moment from \"react-moment\";\nimport \"moment-timezone\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"95vw\",\n    margin: \"0 auto\",\n  },\n  card: {\n    display: \"flex\",\n  },\n  actionsContainer: {\n    display: \"flex\",\n  },\n}));\n\nexport default function Settings({\n  darkMode,\n  switchState,\n  setDarkMode,\n  handleThemeChange,\n}) {\n  const classes = useStyles();\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n\n  const userDate = currentUser?.created_at.toLocaleString();\n  return (\n    <Layout title=\"Settings\">\n      <div className={classes.userContainer}>\n        <Typography className={classes.title}>{currentUser?.name}</Typography>\n        <Typography className={classes.title}>{currentUser?.email}</Typography>\n        <Typography>\n          Joined&nbsp;\n          <Moment format=\"MM/DD/yyyy\">{userDate}</Moment>\n        </Typography>\n      </div>\n      <div className={classes.root}>\n        <Typography>Preferences</Typography>\n        <Card className={classes.card}>\n          <CardActions className={classes.actionsContainer}>\n            <Typography className={classes.typography}>Dark mode</Typography>\n            {/* <Typography onClick={handleThemeChange}>HELLO</Typography> */}\n            <Switch\n              className={classes.darkModeSwitch}\n              // checked={darkMode}\n              checked={switchState}\n              // onChange={() => setDarkMode(!darkMode)}\n              onChange={handleThemeChange}\n            />\n          </CardActions>\n        </Card>\n      </div>\n    </Layout>\n  );\n}\n",["120","121"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/InsightScreens/InsightCreate.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/containers/InsightsContainer.jsx",["122","123"],"import Layout from \"../layouts/Layout/Layout\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\nimport {\n  destroyInsight,\n  getAllInsights,\n  postInsight,\n  putInsight,\n} from \"../services/insights\";\nimport Insights from \"../screens/main/Insights/Insights\";\nimport InsightCreate from \"../screens/InsightScreens/InsightCreate\";\nconst useStyles = makeStyles({});\n\nexport default function Community() {\n  const classes = useStyles();\n  const [insights, setInsights] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchInsights = async () => {\n      const insightData = await getAllInsights();\n      setInsights(insightData);\n    };\n    fetchInsights();\n  }, []);\n\n  const handleCreate = async (insightData) => {\n    const newInsight = await postInsight(insightData);\n    setInsights((prevState) => [...prevState, newInsight]);\n    history.push(\"/insights\");\n  };\n\n  const handleUpdate = async (id, insightData) => {\n    const updatedInsight = await putInsight(id, insightData);\n    setInsights((prevState) =>\n      prevState.map((insight) => {\n        return insight.id === Number(id) ? updatedInsight : insight;\n      })\n    );\n    history.push(\"/insights\");\n  };\n\n  const handleDelete = async (id) => {\n    await destroyInsight(id);\n    setInsights((prevState) =>\n      prevState.filter((insight) => insight.id !== id)\n    );\n  };\n  return (\n    <>\n      <Switch>\n        <Route path=\"/insights/new\">\n          <InsightCreate handleCreate={handleCreate} />\n        </Route>\n        <div className={classes.root}>\n          <Route path=\"/insights\">\n            <Insights insights={insights} handleDelete={handleDelete} />\n          </Route>\n        </div>\n      </Switch>\n    </>\n  );\n}\n","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Insights/Insights.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/insights.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"124","replacedBy":"128"},{"ruleId":"126","replacedBy":"129"},{"ruleId":"124","replacedBy":"130"},{"ruleId":"126","replacedBy":"131"},{"ruleId":"124","replacedBy":"132"},{"ruleId":"126","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":93,"column":10,"nodeType":"136","messageId":"137","endLine":93,"endColumn":21},{"ruleId":"134","severity":1,"message":"135","line":92,"column":10,"nodeType":"136","messageId":"137","endLine":92,"endColumn":21},{"ruleId":"124","replacedBy":"138"},{"ruleId":"126","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":79,"column":6,"nodeType":"142","endLine":79,"endColumn":19,"suggestions":"143"},{"ruleId":"134","severity":1,"message":"144","line":1,"column":10,"nodeType":"136","messageId":"137","endLine":1,"endColumn":14},{"ruleId":"134","severity":1,"message":"145","line":33,"column":23,"nodeType":"136","messageId":"137","endLine":33,"endColumn":37},{"ruleId":"124","replacedBy":"146"},{"ruleId":"126","replacedBy":"147"},{"ruleId":"134","severity":1,"message":"148","line":1,"column":8,"nodeType":"136","messageId":"137","endLine":1,"endColumn":14},{"ruleId":"134","severity":1,"message":"149","line":34,"column":9,"nodeType":"136","messageId":"137","endLine":34,"endColumn":21},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],["150"],["151"],["150"],["151"],["150"],["151"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar",["150"],["151"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'Link' is defined but never used.","'setCurrentUser' is assigned a value but never used.",["150"],["151"],"'Layout' is defined but never used.","'handleUpdate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},"Update the dependencies array to be: [id, props.moods]",{"range":"155","text":"156"},[1762,1775],"[id, props.moods]"]