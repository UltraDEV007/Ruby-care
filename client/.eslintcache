[{"/Users/daniel/general_assembly/sei/unit_4/care/client/src/reportWebVitals.js":"1","/Users/daniel/general_assembly/sei/unit_4/care/client/src/App.jsx":"2","/Users/daniel/general_assembly/sei/unit_4/care/client/src/index.js":"3","/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Layout.jsx":"4","/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Footer.jsx":"5","/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Header.jsx":"6","/Users/daniel/general_assembly/sei/unit_4/care/client/src/CurrentUser/CurrentUserContext.jsx":"7","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/auth.js":"8","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/auth/Login.jsx":"9","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/auth/Register.jsx":"10","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/apiConfig.js":"11","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Home/Home.jsx":"12","/Users/daniel/general_assembly/sei/unit_4/care/client/src/containers/MoodsContainer.jsx":"13","/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/MoodComponents/Moods.jsx":"14","/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/MoodComponents/MoodCard.jsx":"15","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/moods.js":"16","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/MoodScreens/MoodEdit.jsx":"17","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Community/Community.jsx":"18","/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/Dialogs/MoodCreate.jsx":"19","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Settings/Settings.jsx":"20"},{"size":362,"mtime":1606749279641,"results":"21","hashOfConfig":"22"},{"size":2903,"mtime":1606850643113,"results":"23","hashOfConfig":"22"},{"size":589,"mtime":1606763998910,"results":"24","hashOfConfig":"22"},{"size":405,"mtime":1606801407890,"results":"25","hashOfConfig":"22"},{"size":1462,"mtime":1606838722572,"results":"26","hashOfConfig":"22"},{"size":3086,"mtime":1606843696919,"results":"27","hashOfConfig":"22"},{"size":833,"mtime":1606842169160,"results":"28","hashOfConfig":"22"},{"size":1054,"mtime":1606779597505,"results":"29","hashOfConfig":"22"},{"size":5357,"mtime":1606786649712,"results":"30","hashOfConfig":"22"},{"size":5631,"mtime":1606786653651,"results":"31","hashOfConfig":"22"},{"size":314,"mtime":1606749945092,"results":"32","hashOfConfig":"22"},{"size":2298,"mtime":1606837729252,"results":"33","hashOfConfig":"22"},{"size":1859,"mtime":1606837787017,"results":"34","hashOfConfig":"22"},{"size":1920,"mtime":1606837838480,"results":"35","hashOfConfig":"22"},{"size":4068,"mtime":1606840415888,"results":"36","hashOfConfig":"22"},{"size":683,"mtime":1606836987486,"results":"37","hashOfConfig":"22"},{"size":3483,"mtime":1606841700840,"results":"38","hashOfConfig":"22"},{"size":327,"mtime":1606785495218,"results":"39","hashOfConfig":"22"},{"size":4867,"mtime":1606842636302,"results":"40","hashOfConfig":"22"},{"size":2038,"mtime":1606849902798,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"785fjd",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},"/Users/daniel/general_assembly/sei/unit_4/care/client/src/reportWebVitals.js",[],["89","90"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/App.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/index.js",[],["91","92"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Layout.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Footer.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/layouts/Layout/Header.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/CurrentUser/CurrentUserContext.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/auth.js",[],["93","94"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/auth/Login.jsx",["95"],"import { useState, useContext } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../CurrentUser/CurrentUserContext\";\nimport { loginUser } from \"../../services/auth\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockIcon from \"@material-ui/icons/Lock\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexFlow: \"wrap\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100vh\",\n  },\n  logoContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: \"20px\",\n    marginBottom: \"20px\",\n  },\n\n  title: {\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    fontSize: \"36px\",\n    padding: \"15px\",\n    marginTop: \"10px\",\n    textShadow: \"0.5px 4px 10px #999\",\n  },\n  logo: {\n    maxWidth: \"100px\",\n    maxHeight: \"100px\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  loginButton: {\n    margin: \"20px auto\",\n    padding: \"20px\",\n    color: \"#62B5D9\",\n    fontSize: \"28px\",\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    textTransform: \"capitalize\",\n  },\n  register: {\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    fontSize: \"26px\",\n    textDecoration: \"none\",\n    color: \"#000\",\n  },\n  registerLink: {\n    textDecoration: \"none\",\n    color: \"#62B5D9\",\n  },\n  inputField: {\n    marginBottom: \"20px\",\n    width: \"300px\",\n    marginLeft: \"10px\",\n  },\n  passwordField: {\n    marginBottom: \"20px\",\n    width: \"300px\",\n  },\n  lockIcon: {\n    marginRight: \"10px\",\n  },\n  inputContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n});\n\nexport default function Login() {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleLogin = async (loginData) => {\n    const userData = await loginUser(loginData);\n    setCurrentUser(userData);\n    history.push(\"/\");\n  };\n\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <>\n      <div className={classes.root}>\n        <div className={classes.logoContainer}>\n          <Typography className={classes.title}>Care</Typography>\n          <img\n            className={classes.logo}\n            src=\"https://i.imgur.com/1QePclv.png\"\n            alt=\"logo\"\n          />\n        </div>\n\n        <form\n          className={classes.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleLogin(formData);\n          }}\n        >\n          <div className={classes.inputContainer}>\n            <EmailIcon />\n            <TextField\n              className={classes.inputField}\n              type=\"text\"\n              name=\"email\"\n              label=\"Email Address\"\n              value={formData.email}\n              onChange={handleChange}\n            />\n          </div>\n          <br />\n          <div className={classes.inputContainer}>\n            <LockIcon className={classes.lockIcon} />\n            <FormControl>\n              <InputLabel htmlFor=\"standard-adornment-password\">\n                Password\n              </InputLabel>\n              <Input\n                className={classes.passwordField}\n                name=\"password\"\n                id=\"standard-adornment-password\"\n                type={showPassword ? \"text\" : \"password\"}\n                value={formData.password}\n                onChange={handleChange}\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          </div>\n          <br />\n          <Button type=\"submit\" className={classes.loginButton}>\n            Login\n          </Button>\n        </form>\n        <Typography className={classes.register}>\n          Don't have an account? &nbsp;\n          <Link className={classes.registerLink} to=\"/register\">\n            Register\n          </Link>\n        </Typography>\n      </div>\n    </>\n  );\n}\n","/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/auth/Register.jsx",["96"],"import { useState, useContext } from \"react\";\nimport { CurrentUserContext } from \"../../CurrentUser/CurrentUserContext\";\nimport { registerUser } from \"../../services/auth\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    flexFlow: \"wrap\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: \"100vh\",\n  },\n  logoContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: \"20px\",\n    marginBottom: \"20px\",\n  },\n\n  title: {\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    fontSize: \"36px\",\n    padding: \"15px\",\n    marginTop: \"10px\",\n    textShadow: \"0.5px 4px 10px #999\",\n  },\n  logo: {\n    maxWidth: \"100px\",\n    maxHeight: \"100px\",\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  registerButton: {\n    margin: \"20px auto\",\n    padding: \"20px\",\n    color: \"#62B5D9\",\n    fontSize: \"28px\",\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    textTransform: \"capitalize\",\n  },\n  login: {\n    fontFamily: [\"Montserrat\", \"sans-serif\"].join(\",\"),\n    fontSize: \"26px\",\n    textDecoration: \"none\",\n    color: \"#000\",\n  },\n  loginLink: {\n    textDecoration: \"none\",\n    color: \"#62B5D9\",\n  },\n  inputField: {\n    marginBottom: \"20px\",\n    width: \"300px\",\n    marginLeft: \"10px\",\n  },\n  passwordField: {\n    marginBottom: \"20px\",\n    width: \"300px\",\n  },\n  lockIcon: {\n    marginRight: \"10px\",\n  },\n  inputContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n});\n\nexport default function Register() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleRegister = async (registerData) => {\n    const userData = await registerUser(registerData);\n    setCurrentUser(userData);\n    history.push(\"/\");\n  };\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.logoContainer}>\n        <Typography className={classes.title}>Care</Typography>\n        <img\n          className={classes.logo}\n          src=\"https://i.imgur.com/1QePclv.png\"\n          alt=\"logo\"\n        />\n      </div>\n      <form\n        className={classes.form}\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleRegister(formData);\n        }}\n      >\n        <div className={classes.inputContainer}>\n          <AccountCircleIcon />\n          <TextField\n            className={classes.inputField}\n            type=\"text\"\n            name=\"name\"\n            label=\"Name\"\n            value={formData.name}\n            onChange={handleChange}\n          />\n        </div>\n        <br />\n        <div className={classes.inputContainer}>\n          <EmailIcon />\n          <TextField\n            className={classes.inputField}\n            type=\"text\"\n            name=\"email\"\n            label=\"Email Address\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n        </div>\n        <br />\n        <div className={classes.inputContainer}>\n          <LockIcon className={classes.lockIcon} />\n          <FormControl>\n            <InputLabel htmlFor=\"standard-adornment-password\">\n              Password\n            </InputLabel>\n            <Input\n              className={classes.passwordField}\n              name=\"password\"\n              id=\"standard-adornment-password\"\n              type={showPassword ? \"text\" : \"password\"}\n              value={formData.password}\n              onChange={handleChange}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        </div>\n        <br />\n        <Button type=\"submit\" className={classes.registerButton}>\n          Register\n        </Button>\n      </form>\n      <Typography className={classes.login}>\n        Already have an account? &nbsp;\n        <Link className={classes.loginLink} to=\"/login\">\n          Login\n        </Link>\n      </Typography>\n    </div>\n  );\n}\n","/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/apiConfig.js",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Home/Home.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/containers/MoodsContainer.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/MoodComponents/Moods.jsx",[],["97","98"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/MoodComponents/MoodCard.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/services/moods.js",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/MoodScreens/MoodEdit.jsx",["99"],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Community/Community.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/components/Dialogs/MoodCreate.jsx",[],"/Users/daniel/general_assembly/sei/unit_4/care/client/src/screens/main/Settings/Settings.jsx",["100","101"],"import { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Layout from \"../../../layouts/Layout/Layout\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { useContext } from \"react\";\nimport { CurrentUserContext } from \"../../../CurrentUser/CurrentUserContext\";\nimport Moment from \"react-moment\";\nimport \"moment-timezone\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"95vw\",\n    margin: \"0 auto\",\n  },\n  card: {\n    display: \"flex\",\n  },\n  actionsContainer: {\n    display: \"flex\",\n  },\n}));\n\nexport default function Settings({\n  darkMode,\n  switchState,\n  setDarkMode,\n  handleThemeChange,\n}) {\n  const classes = useStyles();\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n\n  const userDate = currentUser?.created_at.toLocaleString();\n  return (\n    <Layout title=\"Settings\">\n      <div className={classes.userContainer}>\n        <Typography className={classes.title}>{currentUser?.name}</Typography>\n        <Typography className={classes.title}>{currentUser?.email}</Typography>\n        <Typography>\n          Joined&nbsp;\n          <Moment format=\"MM/DD/yyyy\">{userDate}</Moment>\n        </Typography>\n      </div>\n      <div className={classes.root}>\n        <Typography>Preferences</Typography>\n        <Card className={classes.card}>\n          <CardActions className={classes.actionsContainer}>\n            <Typography className={classes.typography}>Dark mode</Typography>\n            {/* <Typography onClick={handleThemeChange}>HELLO</Typography> */}\n            <Switch\n              className={classes.darkModeSwitch}\n              // checked={darkMode}\n              checked={switchState}\n              // onChange={() => setDarkMode(!darkMode)}\n              onChange={handleThemeChange}\n            />\n          </CardActions>\n        </Card>\n      </div>\n    </Layout>\n  );\n}\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"102","replacedBy":"108"},{"ruleId":"104","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":91,"column":10,"nodeType":"112","messageId":"113","endLine":91,"endColumn":21},{"ruleId":"110","severity":1,"message":"111","line":92,"column":10,"nodeType":"112","messageId":"113","endLine":92,"endColumn":21},{"ruleId":"102","replacedBy":"114"},{"ruleId":"104","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":79,"column":6,"nodeType":"118","endLine":79,"endColumn":19,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"120","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":14},{"ruleId":"110","severity":1,"message":"121","line":33,"column":23,"nodeType":"112","messageId":"113","endLine":33,"endColumn":37},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],["122"],["123"],["122"],["123"],"no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar",["122"],["123"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["124"],"'Link' is defined but never used.","'setCurrentUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [id, props.moods]",{"range":"127","text":"128"},[1762,1775],"[id, props.moods]"]